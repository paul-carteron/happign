% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_iso.R
\name{get_isodistance}
\alias{get_isodistance}
\title{Calculate isodistance}
\usage{
get_isodistance(x,
                dist,
                units = "meter",
                source = "iso",
                profile = "car",
                direction = "departure",
                constraints = NULL)
}
\arguments{
\item{x}{Object of class \code{sf} or \code{sfc} with POINT geometry. There may be
several points in the object. In this case, the output will contain as many
polygons as points.}

\item{dist}{\code{numeric}; A quantity of time.}

\item{units}{\code{character}; Unit in which distance are expressed in the answer.
Should be one of "meter" or "kilometer".}

\item{source}{\code{character}; This parameter specifies which source will
be used for the calculation. Currently, "iso" and "pgr" sources are
available (default "iso"). See section \code{SOURCE} for further information.}

\item{profile}{\code{character}; Type of cost used for calculation: "pedestrian"
for #' pedestrians and "car" for cars. and "car" for cars ("pedestrian"
by default).}

\item{direction}{\code{character}; Direction of travel. Either define a
"departure" point and obtain the potential arrival points. Or define an
"arrival" point and obtain the potential points ("departure" by default).}

\item{constraints}{Used to express constraints on the characteristics
to calculate isochrones/isodistances. See section \code{CONSTRAINTS}.}
}
\description{
Wrapper function to calculate isodistance from \code{get_iso}.
}
